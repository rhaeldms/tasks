pipeline {
    agent any 
    tools {
        maven 'maven'
    }
    stages {
        stage('Build') {
            steps {
                sh '''
                cd tasks-backend
                mvn clean package -DskipTests
                '''
            }
        }
        stage('Test'){
            steps {
                sh '''
                cd tasks-backend
                mvn test                
                '''
            }
        }
        stage('Sonar'){
            environment {
                scanner = tool 'SONAR_SCANNER'
            }
            steps {
                withSonarQubeEnv('SONAR'){
                    sh "${scanner}/bin/sonar-scanner -e -Dsonar.host.url=http://172.17.0.1:9000 -Dsonar.projectKey=Backend -Dsonar.java.binaries=target -Dsonar.exclusions=src/test/**"
                }
            }
        }
        stage('QualityGate'){
            steps {
                sleep(10)
                timeout(time:1, unit:'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        stage('Deploy'){
            steps {
                sh '''
                docker ps -q --filter "name=tasks" | grep -q . && docker stop tasks
                docker build -t backend tasks-backend/ 
                docker run -d --rm --name tasks -e DATABASE_HOST=172.17.0.1 -p 8001:8001 backend
                '''
            }
        }
        stage('Check'){
            steps {
                sleep(5)
                sh """curl -I http://172.17.0.1:8001/todo"""
            }
        }
        stage('BuildFront'){
           steps {
                sh '''
                cd tasks-frontend
                mvn clean package -DskipTests
                '''                                
            }
        }
    }
    post {
        always {
            junit allowEmptyResults: true, testResults: 'task-backend/target/surefire-reports/*.xml'
            archiveArtifacts artifacts: 'task-backend/target/tasks-backend.jar', followSymlinks: false, onlyIfSuccessful: true
        }
    }
}
